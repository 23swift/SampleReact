// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleReact.Data;

namespace SampleReact.Data
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190508072148_AddDateCreatedToPost")]
    partial class AddDateCreatedToPost
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("SampleReact.Model.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Rating");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            Rating = 0,
                            Url = "http://sample.com"
                        });
                });

            modelBuilder.Entity("SampleReact.Model.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlogId");

                    b.Property<string>("Body");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 5, 8, 15, 21, 48, 86, DateTimeKind.Local).AddTicks(2717));

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            Body = "Test 1",
                            DateCreated = new DateTime(2019, 5, 8, 15, 21, 48, 95, DateTimeKind.Local).AddTicks(2191),
                            Title = "First post"
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 1,
                            Body = "quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto",
                            Title = "Second post"
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 1,
                            Body = "est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla",
                            Title = "Third post"
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 1,
                            Body = "et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut",
                            Title = "fourth post"
                        },
                        new
                        {
                            Id = 5,
                            BlogId = 1,
                            Body = "ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit",
                            Title = "5 post"
                        });
                });

            modelBuilder.Entity("SampleReact.Model.Post", b =>
                {
                    b.HasOne("SampleReact.Model.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
